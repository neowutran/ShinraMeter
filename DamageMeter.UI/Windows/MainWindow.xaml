<ui:ClickThrouWindow x:Class="DamageMeter.UI.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:ui="clr-namespace:DamageMeter.UI"
                     xmlns:l="clr-namespace:Lang;assembly=Lang"
                     xmlns:converters="clr-namespace:DamageMeter.UI.HUD.Converters"
                     xmlns:controls="clr-namespace:DamageMeter.UI.Controls"
                     mc:Ignorable="d"
                     Title="Shinra Meter"
                     MinHeight="60" MinWidth="219"
                     Loaded="MainWindow_OnLoaded"
                     Closed="MainWindow_OnClosed" 
                     MouseEnter="MainWindow_OnMouseEnter"
                     MouseLeave="MainWindow_OnMouseLeave">

    <Window.Resources>
        <converters:TransparencyToMarginConverter x:Key="BoolToMargin" />
        <Style TargetType="{x:Type ToolTip}">
            <Setter Property="Background" Value="#8F000000" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock TextWrapping="Wrap" Text="{Binding}" MaxWidth="600" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="2"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="1" />
                <Border
                    Grid.Column="0"
                    CornerRadius="2,0,0,2"
                    Margin="1"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="0,0,1,0" />
                <Path
                    x:Name="Arrow"
                    Grid.Column="1"
                    Fill="White"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true" />
                <Trigger Property="ToggleButton.IsChecked" Value="true" />
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="Image" x:Key="ImageButton">
            <Setter Property="Opacity" Value=".7"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity"  Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>


        <Style x:Key="ShinraContext" TargetType="{x:Type ContextMenu}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="Black" x:Name="Border"
                                BorderThickness="0.5">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="DarkGray" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow"
                                     Value="true" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                Template="{StaticResource ComboBoxToggleButton}"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press" />
                            <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="3,3,23,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}"
                                     Template="{StaticResource ComboBoxTextBox}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Margin="3,3,23,3"
                                     Focusable="True"
                                     Background="Transparent"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup
                                Name="Popup"

                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"

                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid
                                    Name="DropDown"
                                    SnapsToDevicePixels="True"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                        x:Name="DropDownBorder"
                                        Background="Black"
                                        BorderThickness="1"
                                        BorderBrush="Transparent" />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Foreground" Value="White" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border
                            Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="Black" />
                                <Setter Property="BorderBrush" Value="White" />
                                <Setter Property="BorderThickness" Value="1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Background>
        <SolidColorBrush Color="Transparent" Opacity="0" />
    </Window.Background>
    <Grid HorizontalAlignment="Left" MinWidth="265" Margin="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=AllowsTransparency, Converter={StaticResource BoolToMargin}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.LayoutTransform>
            <ScaleTransform CenterX="0" CenterY="0"
                            ScaleX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=Scale}"
                            ScaleY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=Scale}" />
        </Grid.LayoutTransform>
        <Border Style="{StaticResource MainBorder}" BorderBrush="{StaticResource KrBorderColor}" BorderThickness="1"
                Background="{StaticResource KrBgColor}" Grid.RowSpan="6" x:Name="BackgroundColor"/>
        <Grid Grid.Row="0" Name="EGrid" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="29" />
            </Grid.ColumnDefinitions>
            <ComboBox DropDownClosed="ListEncounter_OnDropDownClosed" DropDownOpened="ListEncounter_OnDropDownOpened"
                      SelectionChanged="ListEncounter_OnSelectionChanged"
                      x:Name="ListEncounter" HorizontalAlignment="Stretch"
                      Margin="0,0,0,0" VerticalAlignment="Top" MinWidth="205" Width="Auto"
                      HorizontalContentAlignment="Left"
                      MinHeight="29" Height="5" Grid.Column="0" />


            <Image PreviewMouseLeftButtonDown="Close_MouseLeftButtonDown" 
                    Grid.Column="1" Stretch="Fill" x:Name="CloseWindow"
                   HorizontalAlignment="Right"  Style="{StaticResource ImageButton}"
                   Height="29" VerticalAlignment="Top" Width="29" >
            </Image>
        </Grid>
        <Grid Grid.Row="1" Name="SGrid" HorizontalAlignment="Stretch" Height="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid HorizontalAlignment="Left" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Path Data="{StaticResource Svg.Timer}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Margin="5,0,0,0" Fill="#5fff" Height="16"></Path>

                <Label Focusable="False" x:Name="Timer" HorizontalAlignment="Left" Grid.Column="1" FontSize="14"
                   Foreground="White" PreviewMouseLeftButtonDown="ChangeTimeLeft"
                   VerticalAlignment="Top" MinHeight="29" Height="29" Width="Auto" HorizontalContentAlignment="Center" />
            </Grid>
            <Grid HorizontalAlignment="Left" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Path Grid.Column="0" Data="{StaticResource Svg.Sword}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Margin="5,0,0,0" Fill="#5fff" Height="16"></Path>

                <Label Focusable="False" x:Name="PartyDps" HorizontalAlignment="Left" Grid.Column="1" FontSize="14"
                   Foreground="White"
                   VerticalAlignment="Top" MinHeight="29" Height="29" Width="Auto" HorizontalContentAlignment="Center" />
            </Grid>
            <Grid HorizontalAlignment="Left" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Path Grid.Column="0" Data="{StaticResource Svg.HeartHalfFull}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Margin="5,0,0,0" Fill="#5fff" Height="16"></Path>
                <Label Focusable="False" x:Name="TotalDamage" HorizontalAlignment="Left" Grid.Column="1" FontSize="14"
                   Foreground="White" 
                   VerticalAlignment="Top" MinHeight="29" Height="29" Width="Auto" HorizontalContentAlignment="Center" />
            </Grid>
        </Grid>
        <ScrollViewer x:Name="Scroller" Grid.Row="2" VerticalScrollBarVisibility="Auto" >
            <ItemsControl Name="Players" Background="Transparent" BorderThickness="0" Focusable="False"
                          IsTextSearchEnabled="False"
                          HorizontalAlignment="Stretch" Grid.IsSharedSizeScope="True" />
        </ScrollViewer>
        <TextBlock  Grid.Row="3" Margin="5" HorizontalAlignment="Stretch" TextWrapping="Wrap" TextAlignment="Center" Name="TooSlow" 
                   Background="Transparent" Foreground="Yellow" Text="{x:Static l:LP.Your_computer_is_too_slow}"
                   Visibility="Collapsed"/>
        <TextBlock  Grid.Row="3" Margin="5" HorizontalAlignment="Stretch" TextWrapping="Wrap" TextAlignment="Center" Name="WaitingMapChange" 
                   Background="Transparent" Foreground="#f55" Text="{x:Static l:LP.WaitingMapChange}" FontWeight="DemiBold"
                   Visibility="Collapsed"/>
        <TextBlock  Grid.Row="3" Margin="5" HorizontalAlignment="Stretch" TextWrapping="Wrap" TextAlignment="Center" Name="UserPaused" 
                   Background="Transparent" 
                   Visibility="Collapsed">
            <Run  Text="{x:Static l:LP.UserPaused}" Foreground="#aaa"></Run>
            <LineBreak/>
            <Run FontWeight="DemiBold" Foreground="#f55" Text="Change map or relog after resuming meter"></Run>
        </TextBlock>
        <controls:RealtimeGraph Grid.Row="4" x:Name="Graph" Margin="-3 1 0 1" MouseEnter="OnGraphMouseEnter" MouseLeave="OnGraphMouseLeave"
                                DataContext="{Binding GraphViewModel, RelativeSource={RelativeSource AncestorType=ui:MainWindow}}"/>
        <Grid Grid.Row="5" Name="Footer" Height="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!--Blur button-->
            <ToggleButton  
        Grid.Column="2" x:Name="HideNames"
        HorizontalAlignment="Center" Style="{StaticResource ToggleButtonStyle}"
        Height="25" VerticalAlignment="Top" Width="25" Margin="2">
                <Image Name="HideNamesImage" />
            </ToggleButton>

            <!--Adds button-->
            <Image PreviewMouseLeftButtonDown="Chrono_OnPreviewMouseLeftButtonDown"
           HorizontalAlignment="Center" x:Name="Chrono" Stretch="Fill"  Style="{StaticResource ImageButton}"
           Height="25" VerticalAlignment="Top" Width="25" Grid.Column="3" Margin="2"/>

            <!--Settings button-->
            <Image  
        HorizontalAlignment="Center"  Stretch="Fill" x:Name="Config"
        PreviewMouseLeftButtonDown="Config_MouseLeftButtonDown"  Style="{StaticResource ImageButton}"
        Height="25" VerticalAlignment="Top" Width="25" Grid.Column="4" Margin="2">
                <Image.ContextMenu>
                    <ContextMenu Style="{DynamicResource ShinraContext}" x:Name="PopupMenu">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" x:Name="History" PreviewMouseLeftButtonDown="ShowHistory"
                           Stretch="Fill"
                           HorizontalAlignment="Left"
                           Height="29" VerticalAlignment="Top" Width="29" />
                            <Label Grid.Column="1" PreviewMouseLeftButtonDown="ShowHistory"
                           Content="{Binding Source={x:Static l:LP.SystemTray_Site_export}}" Foreground="White"
                           FontSize="14" />
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" x:Name="Chatbox" PreviewMouseLeftButtonDown="ShowChat"
                           Stretch="Fill"
                           HorizontalAlignment="Left"
                           Height="29" VerticalAlignment="Top" Width="29" />
                            <Label Grid.Column="1" PreviewMouseLeftButtonDown="ShowChat"
                           Content="{Binding Source={x:Static l:LP.Chat}}" Foreground="White" FontSize="14" />
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" x:Name="BossGageImg" PreviewMouseLeftButtonDown="ShowBossGage"
                           Stretch="Fill"
                           HorizontalAlignment="Left"
                           Height="29" VerticalAlignment="Top" Width="29" />
                            <Label Grid.Column="1" PreviewMouseLeftButtonDown="ShowBossGage"
                           Content="{Binding Source={x:Static l:LP.ShowBossGage}}" Foreground="White"
                           FontSize="14" />
                        </Grid>
                    </ContextMenu>
                </Image.ContextMenu>

            </Image>

            <!--Stats button-->
            <Image x:Name="EntityStatsImage" PreviewMouseLeftButtonDown="EntityStatsImage_OnPreviewMouseLeftButtonDown"
           Stretch="Fill"  Style="{StaticResource ImageButton}"
           HorizontalAlignment="Center" Margin="2"
           Height="25" VerticalAlignment="Top" Width="25" Grid.Column="1" />

            <!--Adds button-->
            <Image PreviewMouseLeftButtonDown="UserPauseBtnPreviewMouseLeftButtonDown"
           HorizontalAlignment="Center" x:Name="UserPauseBtn" Stretch="Fill"  Style="{StaticResource ImageButton}"
           Height="25" VerticalAlignment="Top" Width="25" Grid.Column="5" Margin="2"/>


        </Grid>
        <ui:NotifyIcon x:Name="NotifyIcon" />
    </Grid>
</ui:ClickThrouWindow>
